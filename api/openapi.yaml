openapi: 3.0.3

info:
  title: Realtime Crime Surveillance System API
  description: A simple API to report crime and dispatch police patrol
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local Dev Server

paths:
  /crimes:
    get:
      summary: List all crimes reports
      responses:
        '200':
          description: A list of crimes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Crime'
    post:
      summary: Add a new crime
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCrime'
      responses:
        '201':
          description: New crime created
        '400':
          description: Bad request of JSON
  
  /crimes/{id}:
    put:
      summary: Update and overwrite the existing crime status
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reporter_id:
                  type: string
                patrol_id:
                  type: string
                description:
                  type: string
                status:
                  $ref: '#/components/schemas/CrimeStatus'
                location:
                  $ref: '#/components/schemas/Location'
              required: [reporter_id, description, status, location]
      responses:
        '200':
          description: Crime updated
        '404':
          description: Crime not found
    patch:
      summary: Partially update crime status or assigned patrol; In patrol_id as "" will remove the assigned patrol; In location, existing fields will not be removed with "". 
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reporter_id:
                  type: string
                patrol_id:
                  type: string
                description:
                  type: string
                status:
                  $ref: '#/components/schemas/CrimeStatus'
                location:
                  $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Crime updated
        '404':
          description: Crime not found
    delete:
      summary:  Delete a crime by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: string
      responses:
        '204':
          description: Crime deleted successfully
        '404':
          description: Crime not found

  /patrols:
    post:
      summary: Register a police patrol
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPatrol'
      responses:
        '201':
          description: Patrol unit created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patrol'
    get:
      summary: List all patrols and status
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of patrols with status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patrol'
  /patrols/{id}:
    get:
      summary: Get patrol info
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully return patrol info
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/Patrol'
        '404':
          description: Patrol not found

    put:
      summary: Update patrol info
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStatus'
      responses:
        '200':
          description: Patrol status updated
        '404':
          description: Patrol not found
  
  /dispatch:
    post:
      summary: Assign patrol to an existing crime
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                crime_id:
                  type: integer
              required: [crime_id]
      responses:
        '200':
          description: Patrol assigned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DispatchResult'
  
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '400':
          description: Bad request of JSON
        '409':
          description: User already exists
  
  /admin/users/{id}/role:
    patch:
      summary: Admin changes the existing user role
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: string
                role:
                  $ref : '#/components/schemas/Role'
              required: [user_id, role]
                
      responses:
        '200':
          description: Successfully changed the role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
        '401':
          description: Unauthorized - invalid or missing credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                   type: string
        '403':
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  
  # /admin/login:
  #   post:
  #     summary: Admin sign in for observe system
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/LoginRequest'
  #     responses:
  #       '200':
  #         description: Successfully authenticated
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/AuthToken'
  #       '401':
  #         description: Unauthorized - invalid or missing credentials
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                  type: string

                

components:
  schemas:
    Crime:
      type: object
      properties:
        id:
          type: integer
        time:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/Location'
        description:
          type: string
        status:
          $ref: '#/components/schemas/CrimeStatus'
        suspectDescription:
          type: string
      required: [id, time, location, description, status]

    Location:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        state:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
      required: [street, city, state, latitude, longitude]

    NewCrime:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
        description:
          type: string
      required: [location, description]
    
    UpdateCrime:
      type: object
      properties:
        status:
          type: string
          enum: [NEW, ASSIGNED, RESOLVED]
        assignedPatrolId:
          type: integer
      required: [status]

    Role:
      type: string
      enum: [CITIZEN, PATROL, DISPATCHER, ADMIN]


    Patrol:
      type: object
      properties:
        id:
          type: integer
        officerName:
          type: string
        status:
          type: string
          enum: [available, busy]
        location:
          $ref: '#/components/schemas/Location'
      required: [id, officerName, status, location]

    NewPatrol:
      type: object
      properties:
        officerName: 
          type: string
        status:
          type: string
          enum: [available, busy]
        location:
          $ref: '#/components/schemas/Location'
      required: [officerName, status, location]

    NewStatus:
      type: object
      properties:
        status:
          type: string
          enum: [available, busy]
        location:
          $ref: '#/components/schemas/Location'
      required: [status, location]

    CrimeStatus:
      type: string
      enum: [NEW, ASSIGNED, RESOLVED]

    
    DispatchResult:
      type: object
      properties:
        crime:
          $ref: '#/components/schemas/Crime'
        assignedPatrol:
          $ref: '#/components/schemas/Patrol'
      required: [crime, assignedPatrol]
    
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]

    AuthToken:
      type: object
      properties:    
        token:
          type: string
      required: [token]
    
    NewUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]


  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    


    
    


